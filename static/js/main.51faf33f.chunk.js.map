{"version":3,"sources":["components/WeatherDetails/WeatherDetails.module.scss","components/App/App.module.scss","components/WeatherDays/WeatherDays.module.scss","helpers/toastrSetting.js","weatherApi/weatherApi.js","components/WeatherDetails/WeatherDetails.js","components/WeatherDays/WeatherDays.js","components/App/App.js","index.js"],"names":["module","exports","toastr","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","axios","defaults","baseURL","getWeather","citySearch","a","get","data","message","notification","error","console","WeatherDetails","details","whatTheDay","cityName","pop","wind","main","clouds","className","s","detailsBox","aboutTargetDay","idx","changeTargetDay","property","deg","speed","temp_min","temp_max","pressure","humidity","all","WeatherDays","allData","filteredWeatherData","list","filter","day","useState","visibleDetails","setVisibleDetails","idxDay","setIdxDay","dayCreate","itemDay","dayTitle","icon","weather","find","item","urlIcon","dayBox","key","onClick","dayIdx","changeDay","_","handleClickDay","titleDay","iconBox","src","alt","imageIcon","temp","titleCity","city","name","about","daysWeatherBox","map","App","state","loader","handleSearchPrompt","setState","weatherApi","handleSearchCity","value","reg","search","replace","handleSubmitCity","evt","preventDefault","this","isShowData","isShowLoader","appWrapper","titleApp","target","rel","href","onSubmit","form","input","type","placeholder","onChange","button","description","descrBtn","loaderBox","loading","color","size","margin","devName","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.51faf33f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsBox\":\"WeatherDetails_detailsBox__3p_Q1\",\"property\":\"WeatherDetails_property__1s6r1\",\"aboutTargetDay\":\"WeatherDetails_aboutTargetDay__1678k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__2jZL-\",\"titleApp\":\"App_titleApp__3-hcc\",\"description\":\"App_description__3KII_\",\"descrBtn\":\"App_descrBtn__uiRPU\",\"form\":\"App_form__1IhQa\",\"input\":\"App_input__2lfsY\",\"button\":\"App_button__2LRXm\",\"loaderBox\":\"App_loaderBox__1CX98\",\"devName\":\"App_devName__2D1fn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleCity\":\"WeatherDays_titleCity__2mLr7\",\"about\":\"WeatherDays_about__1syM9\",\"daysWeatherBox\":\"WeatherDays_daysWeatherBox__QmDLK\",\"dayBox\":\"WeatherDays_dayBox__2axsx\",\"iconBox\":\"WeatherDays_iconBox__3XHty\",\"imageIcon\":\"WeatherDays_imageIcon__19DN7\",\"titleDay\":\"WeatherDays_titleDay__1otvG\",\"temp\":\"WeatherDays_temp__uxy1p\"};","import toastr from 'toastr';\r\nimport 'toastr/build/toastr.css';\r\n\r\ntoastr.options = {\r\n  closeButton: true,\r\n  debug: false,\r\n  newestOnTop: true,\r\n  progressBar: true,\r\n  positionClass: 'toast-bottom-full-width',\r\n  preventDuplicates: true,\r\n  onclick: null,\r\n  showDuration: '300',\r\n  hideDuration: '1000',\r\n  timeOut: '5000',\r\n  extendedTimeOut: '1000',\r\n  showEasing: 'swing',\r\n  hideEasing: 'linear',\r\n  showMethod: 'fadeIn',\r\n  hideMethod: 'fadeOut',\r\n};\r\n\r\nexport default toastr;\r\n","import axios from 'axios';\r\nimport notification from '../helpers/toastrSetting';\r\n\r\naxios.defaults.baseURL = 'https://api.openweathermap.org';\r\n\r\nconst ApiKey = '889aa1433777fac2383867e84807139f';\r\n\r\nconst getWeather = async citySearch => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `/data/2.5/forecast?q=${citySearch}&units=metric&appid=${ApiKey}`,\r\n    );\r\n\r\n    return data;\r\n  } catch (error) {\r\n    if (error.message === 'Request failed with status code 404') {\r\n      notification.error(\r\n        'Введите корректные данные и повторите попытку',\r\n        `Город \" ${citySearch} \" не найден! :(`,\r\n      );\r\n\r\n      return;\r\n    }\r\n\r\n    notification.error('Что-то пошло не так! :(');\r\n\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport default { getWeather };\r\n","import React from 'react';\r\nimport s from './WeatherDetails.module.scss';\r\n\r\nexport default function WeatherDetails({ details, whatTheDay, cityName }) {\r\n  const { pop, wind, main, clouds } = details;\r\n\r\n  const changeTargetDay = idx => {\r\n    switch (idx) {\r\n      case 0:\r\n        return 'Сегодняшний день';\r\n      case 1:\r\n        return 'Завтрашний день';\r\n      case 2:\r\n        return 'Послезавтра';\r\n      case 3:\r\n        return 'Через 2 дня';\r\n      case 4:\r\n        return 'Через 3 дня';\r\n      default:\r\n        return 'Сегодняшний день';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.detailsBox}>\r\n      <h3 className={s.aboutTargetDay}>\r\n        Подробности: <span>{cityName}</span>. {changeTargetDay(whatTheDay)}\r\n      </h3>\r\n      <p className={s.property}>\r\n        Вероятность выпадения осадков: <span>{pop}%</span>\r\n      </p>\r\n      <p className={s.property}>\r\n        Направление ветра: <span>{wind.deg} градус(ов)</span>\r\n      </p>\r\n      <p className={s.property}>\r\n        Скорость ветра: <span>{wind.speed} метр/сек</span>\r\n      </p>\r\n      <p className={s.property}>\r\n        Температура:{' '}\r\n        <span>\r\n          min {main.temp_min}°, max {main.temp_max}°\r\n        </span>\r\n      </p>\r\n      <p className={s.property}>\r\n        Давление: <span>{main.pressure}</span>\r\n      </p>\r\n      <p className={s.property}>\r\n        Влажность: <span>{main.humidity}%</span>\r\n      </p>\r\n      <p className={s.property}>\r\n        Облачность: <span>{clouds.all}%</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport WeatherDetails from '../WeatherDetails/WeatherDetails';\r\nimport s from './WeatherDays.module.scss';\r\n\r\nconst WeatherDays = ({ allData }) => {\r\n  const { list: data } = allData;\r\n\r\n  const filteredWeatherData = data.filter((day, idx) => idx % 8 === 0 && day);\r\n\r\n  const [visibleDetails, setVisibleDetails] = useState(filteredWeatherData[0]);\r\n  const [idxDay, setIdxDay] = useState(0);\r\n\r\n  const handleClickDay = dayIdx => {\r\n    const changeDay = filteredWeatherData.filter((_, idx) => idx === dayIdx)[0];\r\n\r\n    setVisibleDetails(changeDay);\r\n    setIdxDay(dayIdx);\r\n  };\r\n\r\n  const dayCreate = (itemDay, idx, dayTitle) => {\r\n    const icon = itemDay.weather.find(item => item.icon).icon;\r\n    const urlIcon = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n\r\n    return (\r\n      <div className={s.dayBox} key={idx} onClick={() => handleClickDay(idx)}>\r\n        <h3 className={s.titleDay}>{dayTitle}</h3>\r\n        <div className={s.iconBox}>\r\n          <img src={urlIcon} alt=\"weather icon\" className={s.imageIcon} />\r\n        </div>\r\n        <p className={s.temp}>{itemDay.main.temp}°</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className={s.titleCity}>\r\n        Погода для города <span>{allData.city.name}</span>\r\n      </h3>\r\n\r\n      <p className={s.about}>\r\n        Нажмите на нужный день, для переключения подробностей ниже\r\n      </p>\r\n\r\n      <div className={s.daysWeatherBox}>\r\n        {filteredWeatherData.map((itemDay, idx) => {\r\n          switch (idx) {\r\n            case 0:\r\n              return dayCreate(itemDay, idx, 'Сегодня');\r\n            case 1:\r\n              return dayCreate(itemDay, idx, 'Завтра');\r\n            case 2:\r\n              return dayCreate(itemDay, idx, 'Послезавтра');\r\n            case 3:\r\n              return dayCreate(itemDay, idx, 'Через 2 дня');\r\n            case 4:\r\n              return dayCreate(itemDay, idx, 'Через 3 дня');\r\n            default:\r\n              return dayCreate(itemDay, idx, 'Сегодня');\r\n          }\r\n        })}\r\n      </div>\r\n\r\n      <WeatherDetails\r\n        details={visibleDetails}\r\n        whatTheDay={idxDay}\r\n        cityName={allData.city.name}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDays;\r\n","import React from 'react';\nimport weatherApi from '../../weatherApi/weatherApi';\nimport WeatherDays from '../WeatherDays/WeatherDays';\nimport RiseLoader from 'react-spinners/RiseLoader';\nimport s from './App.module.scss';\n\nexport default class App extends React.Component {\n  state = { city: '', data: null, loader: false };\n\n  handleSearchPrompt = async () => {\n    this.setState({ loader: true });\n    const data = await weatherApi.getWeather('Kyiv');\n\n    if (data) this.setState({ data });\n    this.setState({ city: '', loader: false });\n  };\n\n  handleSearchCity = value => {\n    const reg = /[а-яА-ЯёЁ]/g;\n\n    value.search(reg) !== -1\n      ? (value = value.replace(reg, ''))\n      : this.setState({ city: value });\n  };\n\n  handleSubmitCity = async evt => {\n    evt.preventDefault();\n    this.setState({ data: null, loader: true });\n\n    if (!this.state.city) return;\n\n    const data = await weatherApi.getWeather(this.state.city);\n\n    if (data) this.setState({ data });\n    this.setState({ city: '', loader: false });\n  };\n\n  render() {\n    const { city, data } = this.state;\n    const isShowData = data;\n    const isShowLoader = this.state.loader;\n\n    return (\n      <div className={s.appWrapper}>\n        <h1 className={s.titleApp}>\n          <p>Погода</p>\n          <p>\n            by{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://openweathermap.org/\"\n            >\n              OpenWeatherMap\n            </a>{' '}\n            api\n          </p>\n          <p>(React app)</p>\n        </h1>\n        <form onSubmit={this.handleSubmitCity} className={s.form}>\n          <input\n            className={s.input}\n            type=\"text\"\n            value={city}\n            placeholder=\"Поиск города\"\n            onChange={({ target }) => this.handleSearchCity(target.value)}\n          />\n          <button type=\"submit\" className={s.button}>\n            Поиск\n          </button>\n        </form>\n\n        {!isShowData && !isShowLoader && (\n          <div className={s.description}>\n            Введите город латиницей (англ. раскладка) в поле ввода, например:\n            <button className={s.descrBtn} onClick={this.handleSearchPrompt}>\n              Kyiv\n            </button>\n          </div>\n        )}\n\n        {isShowLoader && (\n          <div className={s.loaderBox}>\n            <span>Загрузка данных...</span>\n            <RiseLoader\n              loading={isShowLoader}\n              color={'#ffadad'}\n              size={35}\n              margin={20}\n            />\n          </div>\n        )}\n\n        {isShowData && <WeatherDays allData={data} />}\n\n        <div className={s.devName}>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.linkedin.com/in/aleksey-grygorenko-1358911ba/\"\n          >\n            by Aleksey Grygorenko\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './main.scss';\n\nReactDOM.render(\n  <App />,\n\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}